<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my">

	<!-- 파일관리 파일 순서 조회 -->
	<select id="S_MY_FILE_MANAGE_CNT" resultType="HashMap" parameterType="HashMap" >
		/* S_MY_FILE_MANAGE_CNT */
	    SELECT NVL(MAX(A.SEQ), 0) AS SEQ
	      FROM MY_FILE_MANAGE A
	     WHERE A.COMM_USER_ID = #{COMM_USER_ID}
	     <choose>
	     	<when test="@org.apache.commons.lang3.StringUtils@isBlank(PARENT_KEY_ID)">
	     		AND A.PARENT_KEY_ID IS NULL
	     	</when>
	     	<otherwise>
	     		AND A.PARENT_KEY_ID = #{PARENT_KEY_ID}
	     	</otherwise>
	     </choose>
	</select>
	
	<!-- 파일관리 파일 조회 -->
	<select id="S_FILE_MANAGE" resultType="HashMap" parameterType="HashMap" >
		/* S_FILE_MANAGE */
	    SELECT A.MY_FILE_MANAGE_ID
			 , A.SEQ
			 , A.KEY_ID
			 , A.TITLE
			 , A.TYPE_CODE
			 , A.PARENT_KEY_ID
			 , A.SHOW_YN
			 , A.DESCRIPTION
			 , B.COMM_FILE_ID AS FILE_ID
			 , B.RANDOM_KEY
			 , B.FILE_EXTENSION
	      FROM MY_FILE_MANAGE A
     LEFT JOIN COMM_FILE B ON (B.MODULE_CODE = 'MY' AND B.MENU_URL = 'fileManage' AND B.GROUP_ID = A.MY_FILE_MANAGE_ID)
	     WHERE A.COMM_USER_ID = #{CID}
	       AND A.SHOW_YN = '1'
	     <choose>
	     	<when test="@org.apache.commons.lang3.StringUtils@isBlank(PARENT_KEY_ID)">
	     		AND A.PARENT_KEY_ID IS NULL
	     	</when>
	     	<otherwise>
	     		AND A.PARENT_KEY_ID = #{PARENT_KEY_ID}
	     	</otherwise>
	     </choose>
		 ORDER BY A.SEQ
	</select>
	
	<!-- 파일관리 폴더 트리 조회 -->
	<select id="S_FILE_MANAGE_TREE" resultType="HashMap" parameterType="HashMap" >
		/* S_FILE_MANAGE_TREE */
	    SELECT A.MY_FILE_MANAGE_ID
			 , A.SEQ
			 , A.KEY_ID
			 , A.TITLE
			 , A.TYPE_CODE
			 , B.COMM_FILE_ID
			 , A.PARENT_KEY_ID
			 , A.SHOW_YN
			 , A.DESCRIPTION
	      FROM MY_FILE_MANAGE A
     LEFT JOIN COMM_FILE B ON (B.MODULE_CODE = 'MY' AND B.MENU_URL = 'fileManage' AND B.GROUP_ID = A.MY_FILE_MANAGE_ID)
	     WHERE A.COMM_USER_ID = #{CID}
	     <if test="@org.apache.commons.lang3.StringUtils@isBlank(SHOW_YN)">
		 	AND A.SHOW_YN = '1'
		 </if>
		 <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(FILE_NAME)">
		 	AND EXISTS (
		 	         SELECT DISTINCT Z.COLUMN_VALUE
					   FROM COMM_UTIL_PKG.split((
											  SELECT LISTAGG(A.KEY_STR, '')
											    FROM (
														SELECT SYS_CONNECT_BY_PATH(A.TITLE, '/') AS TITLE_STR
														     , SYS_CONNECT_BY_PATH(A.KEY_ID, '/') AS KEY_STR
														  FROM MY_FILE_MANAGE A
												     LEFT JOIN COMM_FILE B ON (B.MODULE_CODE = 'MY' AND B.MENU_URL = 'fileManage' AND B.GROUP_ID = A.MY_FILE_MANAGE_ID)
												         WHERE A.COMM_USER_ID = #{CID}
												    START WITH A.PARENT_KEY_ID IS null 
												       CONNECT BY PRIOR A.KEY_ID = A.PARENT_KEY_ID
												     ) A
											    WHERE UPPER(TITLE_STR) LIKE '%' || UPPER(#{FILE_NAME}) || '%'
											  ), '/') Z
					  WHERE Z.COLUMN_VALUE IS NOT NULL
					    AND Z.COLUMN_VALUE = A.KEY_ID
		 				)
		 </if>
	     START WITH A.PARENT_KEY_ID IS null 
	   CONNECT BY PRIOR A.KEY_ID = A.PARENT_KEY_ID
		 ORDER SIBLINGS BY A.SEQ
	</select>
	
	<!-- 파일관리 폴더 트리 삭제 -->
	<delete id="D_FILE_MANAGE_TREE" parameterType="HashMap" >
		/* D_FILE_MANAGE_TREE */
		DELETE
		  FROM MY_FILE_MANAGE
		 WHERE COMM_USER_ID = #{COMM_USER_ID}
		   AND KEY_ID = #{KEY_ID}
	</delete>
	<!-- 파일관리 폴더 트리 수정 -->
	<update id="U_FILE_MANAGE_TREE" parameterType="HashMap" >
		/* U_FILE_MANAGE_TREE */
		MERGE INTO MY_FILE_MANAGE A
			 USING DUAL
			    ON (A.COMM_USER_ID = #{COMM_USER_ID} 
			   AND  A.KEY_ID = #{KEY_ID})
			  WHEN MATCHED THEN
			  UPDATE SET A.TITLE = #{TITLE}
			  		   , A.SEQ = #{SEQ}
			  		   , A.PARENT_KEY_ID = #{PARENT_KEY_ID}
			  		   , A.SHOW_YN = #{SHOW_YN}
			  		   , A.MID = #{MID}
			  		   , A.MDT = SYSDATE
			  		   , A.MIP = #{MIP}
			  WHEN NOT MATCHED THEN
			  INSERT(MY_FILE_MANAGE_ID
		          , COMM_USER_ID
		          , SEQ
		          , KEY_ID
		          , TITLE
		          , TYPE_CODE
		          , PARENT_KEY_ID
		          , SHOW_YN
		          <include refid="config.cidColumn"></include>
		          )
		       VALUES(MY_FILE_MANAGE_S.NEXTVAL
		          , #{COMM_USER_ID}
		          , #{SEQ}
		          , #{KEY_ID}
		          , #{TITLE}
		          , #{TYPE_CODE}
		          , #{PARENT_KEY_ID}
		          , #{SHOW_YN}
		          , #{MID}
		          , SYSDATE
		          , #{MIP}
		          , #{MID}
		          , SYSDATE    
		          , #{MIP})
	</update>
	
	<!-- 파일관리 폴더 트리 추가(파일) -->
	<insert id="I_FILE_MANAGE_TREE" parameterType="HashMap" >
		/* I_FILE_MANAGE_TREE */
		<selectKey resultType="HashMap" keyProperty="MY_FILE_MANAGE_ID" order="BEFORE">
			SELECT MY_FILE_MANAGE_S.NEXTVAL as MY_FILE_MANAGE_ID
			  FROM DUAL
		</selectKey>
		INSERT INTO MY_FILE_MANAGE(MY_FILE_MANAGE_ID
						          , COMM_USER_ID
						          , SEQ
						          , KEY_ID
						          , TITLE
						          , TYPE_CODE
						          , PARENT_KEY_ID
						          , SHOW_YN
						          <include refid="config.cidColumn"></include>
							)
					  VALUES(#{MY_FILE_MANAGE_ID}
				          , #{COMM_USER_ID}
				          , #{SEQ}
				          , #{KEY_ID}
				          , #{TITLE}
				          , 'FILE'
				          , #{PARENT_KEY_ID}
				          , '1'
				          , #{CID}
				          , SYSDATE
				          , #{CIP}
				          , #{CID}
				          , SYSDATE    
				          , #{CIP})
	</insert>
	
</mapper>